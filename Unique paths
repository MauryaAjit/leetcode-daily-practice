class Solution {
    public int uniquePaths(int m, int n) {
        int[][] dp = new int[m+1][n+1];
        for(int[]row: dp){
            Arrays.fill(row,-1);
        }
        return uniquePathshelper(0,0,m,n,dp);
    }
    static int uniquePathshelper(int i,int j,int m,int n,int[][]dp){
        if(i>= m|| j >= n) return 0;
        if(i== m-1 && j== n-1) return 1;
        if(dp[i][j]!= -1) return dp[i][j];
        int right = uniquePathshelper (i,j+1,m,n,dp);
        int down = uniquePathshelper(i+1,j,m,n,dp);
        return dp[i][j]= right+down;
    }
}
